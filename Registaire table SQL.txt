drop table IF EXISTS entreprise CASCADE;
drop table IF EXISTS fusionscission CASCADE;
drop table IF EXISTS domainevaleur CASCADE;
drop table IF EXISTS etablissement CASCADE;
drop table IF EXISTS continuationtransformation CASCADE;
drop table IF EXISTS nom CASCADE;

CREATE TABLE Entreprise (
    neq VARCHAR(20) PRIMARY KEY,
    ind_fail CHAR(1),
    dat_immat DATE,
    cod_regim_juri INTEGER,
    cod_intval_emplo_que VARCHAR(500),
    dat_cess_prevu DATE,
    cod_stat_immat VARCHAR(500),
    cod_forme_juri VARCHAR(500),
    dat_stat_immat DATE,
    cod_regim_juri_consti INTEGER,
    dat_depo_declr DATE,
    an_decl INTEGER,
    an_prod INTEGER,
    dat_limit_prod DATE,
    an_prod_pre INTEGER,
    dat_limit_prod_pre DATE,
    dat_maj_index_nom DATE,
    cod_act_econ_cae INTEGER,
    no_act_econ_assuj INTEGER,
    desc_act_econ_assuj VARCHAR(500),
    cod_act_econ_cae2 INTEGER,
    no_act_econ_assuj2 INTEGER,
    desc_act_econ_assuj2 VARCHAR(500),
    nom_loclt_consti VARCHAR(500),
    dat_consti DATE,
    ind_conven_unmn_actnr CHAR(1),
    ind_ret_tout_pouvr CHAR(1),
    ind_limit_resp CHAR(1),
    dat_deb_resp DATE,
    dat_fin_resp DATE,
    objet_soc VARCHAR(1000),
    no_mtr_volont VARCHAR(500),
    adr_domcl_adr_disp CHAR(1),
    adr_domcl_lign1_adr VARCHAR(500),
    adr_domcl_lign2_adr VARCHAR(500),
    adr_domcl_lign3_adr VARCHAR(500),
    adr_domcl_lign4_adr VARCHAR(500)
);

CREATE TABLE FusionScission (
	id UUID PRIMARY KEY,
    neq VARCHAR(20),
    neq_assuj_rel VARCHAR(250),
    denomn_soc VARCHAR(500),
    cod_rela_assuj VARCHAR(500),
    dat_efctvt DATE,
    ind_disp CHAR(1),
    lign1_adr VARCHAR(500),
    lign2_adr VARCHAR(500),
	lign3_adr VARCHAR(500),
    lign4_adr VARCHAR(500)
);

CREATE TABLE ContinuationTransformation (
	id UUID PRIMARY KEY,
    neq VARCHAR(20),
    cod_typ_chang VARCHAR(500),
    cod_regim_juri INTEGER,
    autr_regim_juri VARCHAR(500),
    nom_loclt VARCHAR(500),
    dat_efctvt DATE
);

CREATE TABLE DomaineValeur (
    cod_dom_val INTEGER PRIMARY KEY,
    val_dom_fran VARCHAR(250)
);

CREATE TABLE Nom (
	id UUID PRIMARY KEY,
    neq VARCHAR(20),
    nom_assuj VARCHAR(500),
    nom_assuj_lang_etrng VARCHAR(500),
    stat_nom VARCHAR(500),
    typ_nom_assuj VARCHAR(500),
    dat_init_nom_assuj DATE,
    dat_fin_nom_assuj DATE
);

CREATE TABLE Etablissement (
	id UUID PRIMARY KEY,
    neq VARCHAR(20),
    no_suf_etab INTEGER,
    ind_etab_princ CHAR(1),
    ind_salon_bronz CHAR(1),
    ind_vente_tabac_detl CHAR(1),
    ind_disp CHAR(1),
    lign1_adr VARCHAR(500),
    lign2_adr VARCHAR(500),
    lign3_adr VARCHAR(500),
    lign4_adr VARCHAR(500),
    cod_act_econ INTEGER,
    desc_act_econ_etab VARCHAR(500),
    no_act_econ_etab INTEGER,
    cod_act_econ2 INTEGER,
    desc_act_econ_etab2 VARCHAR(500),
	no_act_econ_etab2 INTEGER,
	nom_etab VARCHAR(500),
	x_coordinate numeric(4,7),
	y_coordinate numeric(4,7)
);

ALTER TABLE FusionScission
ADD FOREIGN KEY (neq) REFERENCES Entreprise(neq);

ALTER TABLE ContinuationTransformation
ADD FOREIGN KEY (neq) REFERENCES Entreprise(neq);

ALTER TABLE Nom
ADD FOREIGN KEY (neq) REFERENCES Entreprise(neq);

ALTER TABLE Etablissement
ADD FOREIGN KEY (neq) REFERENCES Entreprise(neq);

CREATE VIEW code_etab AS 
SELECT DISTINCT d.cod_dom_val, d.val_dom_fran 
FROM domainevaleur d 
INNER JOIN Etablissement e 
ON e.cod_act_econ = d.cod_dom_val OR e.cod_act_econ2 = d.cod_dom_val;
	
CREATE VIEW etab_short AS
SELECT
    e.nom_etab AS name,
    STRING_AGG(e.cod_act_econ || ',' || e.cod_act_econ2, ',') AS combined_values
FROM
    Etablissement e
GROUP BY
    e.nom_etab;
	
create view etab_coordinates as
select e.nom_etab as name,
	   e.lign1_adr as adresse,
	   e.lign2_adr as localite,
	   e.lign3_adr as localite2,
	   e.lign4_adr as zipcode,
	   e.x_coordinate as x_coordinate,
	   e.y_coordinate as y_coordinate,
	   d.cod_dom_val as code,
	   d.val_dom_fran as code_value
from etablissement e 
inner join domainevaleur d
on e.cod_act_econ = d.cod_dom_val OR e.cod_act_econ2 = d.cod_dom_val
where e.x_coordinate is not null 